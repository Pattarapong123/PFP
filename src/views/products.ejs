<!doctype html>
<html lang="th">
<head>
  <meta charset="utf-8" />
  <title>สินค้า • PFP ENGINEERING</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="/styles.css" />
  <link rel="icon" type="image/jpeg" href="/images/logo2.jpg" />

  <style>
    /* ===== Filter Bar ===== */
    .filter-bar{
      display:flex; flex-wrap:wrap; gap:10px; align-items:center;
      background:var(--panel); border:1px solid var(--border);
      border-radius:14px; padding:12px; box-shadow:var(--shadow);
      margin:10px 0 18px;
    }
    .filter-bar form{ display:flex; flex-wrap:wrap; gap:8px; align-items:center; width:100%; }
    .filter-bar .search{ flex: 1 1 280px; min-width: 220px; }
    .filter-bar .search input{ width:100%; }
    .filter-bar .cat{ flex: 0 0 220px; min-width: 180px; }
    .filter-bar .actions{ display:flex; gap:8px; }

    /* ===== Grid ===== */
    .product-grid{
      --gap: 20px;
      display:grid; gap:var(--gap);
      grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
    }

    /* ===== Card ===== */
    .product-card{
      position:relative;
      background: var(--panel);
      border: 1px solid var(--border);
      border-radius: 16px;
      box-shadow: var(--shadow);
      overflow: hidden;
      transition: transform .18s ease, box-shadow .18s ease, border-color .18s ease, outline .18s ease;
      display:flex; flex-direction:column;
      min-height: 440px;
      outline: 0 solid transparent;
      isolation: isolate;
    }
    .product-card:hover{
      transform: translateY(-4px);
      box-shadow: 0 16px 36px rgba(16,24,40,.16);
      border-color: color-mix(in oklab, var(--primary) 28%, var(--border));
    }
    .product-card:focus-within{
      outline: 3px solid color-mix(in oklab, var(--primary) 30%, transparent);
      outline-offset: 0;
    }

    /* ===== Media area ===== */
    .pc-media{
      padding: 14px 14px 0;
      background: linear-gradient(180deg, #f7f8fc 0%, #ffffff 60%, transparent 100%);
      border-bottom: 1px solid var(--border);
    }
    .pc-thumb{
      width: 100%;
      aspect-ratio: 4/3;
      object-fit: contain;
      background:#fff;
      border: 1px solid var(--border);
      border-radius: 12px;
      display:block;
      transition: transform .25s ease, box-shadow .25s ease, border-color .25s ease;
      box-shadow: 0 6px 16px rgba(16,24,40,.08);
    }
    .product-card:hover .pc-thumb{
      transform: scale(1.02);
      box-shadow: 0 10px 22px rgba(16,24,40,.14);
      border-color: color-mix(in oklab, var(--primary) 24%, var(--border));
    }
    .pc-tab{
      width: 120px; height: 12px; margin: 10px auto 0;
      background: color-mix(in oklab, var(--primary) 30%, transparent);
      border-radius: 10px 10px 0 0;
    }

    /* ===== Body ===== */
    .pc-body{ display:flex; flex-direction:column; gap:8px; padding: 12px 16px 16px; flex:1 1 auto; }
    .pc-title{
      margin: 6px 0 0;
      font-size: 16px; font-weight: 900; line-height: 1.35; letter-spacing:.2px;
      display:-webkit-box; -webkit-line-clamp:2; -webkit-box-orient:vertical; overflow:hidden;
      min-height: 44px;
    }
    .pc-title a{ color:inherit; text-decoration:none; }
    .pc-title a:hover{ text-decoration: underline; }

    .pc-meta{ color: var(--muted); font-size: 13px; }

    /* ===== Stock row ===== */
    .stock-row{
      margin-top: 2px;
      color: var(--muted);
      font-size: 13px;
      display:flex; align-items:center; gap: 8px; flex-wrap:wrap;
    }
    .stock-pill{
      display:inline-flex; align-items:center; gap:8px;
      padding:6px 10px; border-radius:999px; border:1px solid var(--border);
      background: color-mix(in oklab, var(--neutral) 4%, transparent);
      font-size:12px; font-weight:800; white-space:nowrap;
      transition: background .25s ease, border-color .25s ease, color .25s ease, opacity .25s ease, transform .25s ease;
    }
    .stock-pill .dot{ width:8px; height:8px; border-radius:50%; background: currentColor; }
    .stock-ok{
      color: var(--success-600);
      background: color-mix(in oklab, var(--success) 10%, transparent);
      border-color: color-mix(in oklab, var(--success) 28%, var(--border));
    }
    .stock-low{
      color: var(--warning-600);
      background: color-mix(in oklab, var(--warning) 10%, transparent);
      border-color: color-mix(in oklab, var(--warning) 28%, var(--border));
    }
    .stock-out{
      color: var(--danger-600);
      background: color-mix(in oklab, var(--danger) 10%, transparent);
      border-color: color-mix(in oklab, var(--danger) 28%, var(--border));
    }
    .stock-anim { opacity:.6; transform: translateY(-2px); }

    .pc-grow{ flex:1 1 auto; }

    /* ===== Footer row ===== */
    .pc-footer{
      display:grid; grid-template-columns: 1fr auto;
      align-items:end; gap: 10px; margin-top: 6px;
      padding-top: 8px; border-top: 1px dashed var(--border);
    }
    .pc-price{
      font-weight: 900; font-size: 18px; letter-spacing:.2px;
      color: var(--primary); white-space: nowrap;
    }
    .pc-actions{ display:flex; gap:8px; }
    .pc-actions .btn{ border-radius: 12px; }

    /* ===== Responsive polish ===== */
    @media (max-width: 900px){
      .product-grid{ --gap: 14px; }
      .pc-price{ font-size: 17px; }
    }

    /* ===== Dark mode tweaks ===== */
    @media (prefers-color-scheme: dark){
      .product-card{ box-shadow: 0 10px 26px rgba(0,0,0,.35); }
      .pc-media{ background: linear-gradient(180deg, #161a23 0%, var(--panel) 100%); }
      .pc-tab{ background: color-mix(in oklab, var(--primary) 42%, transparent); }
    }
  </style>
</head>
<body>
  <%- include('partials/header') %>

  <main class="container" style="padding:24px 0;">
    <h1>สินค้า</h1>

    <!-- ===== Filter Bar (ค้นหา + หมวดหมู่) ===== -->
    <section class="filter-bar">
      <form method="get" action="/products">
        <!-- Search -->
        <div class="search">
          <input class="admin-input" type="text" name="q" value="<%= typeof q !== 'undefined' ? q : '' %>"
                 placeholder="ค้นหาชื่อสินค้า / รุ่น / คำอธิบาย...">
        </div>

        <!-- Category -->
        <div class="cat">
          <select class="admin-select" name="category">
            <option value="">— ทุกหมวดหมู่ —</option>
            <% (categories || []).forEach(cat => { %>
              <option value="<%= cat.slug %>" <%= (category===cat.slug ? 'selected' : '') %>><%= cat.name %></option>
            <% }) %>
          </select>
        </div>

        <!-- Actions -->
        <div class="actions">
          <button class="admin-btn" type="submit">ค้นหา</button>
          <% if (q || category) { %>
            <a class="admin-btn admin-btn--ghost" href="/products">ล้างค่า</a>
          <% } %>
        </div>
      </form>
    </section>

    <% if (!products || products.length === 0) { %>
      <p class="muted">ไม่พบสินค้า</p>
    <% } else { %>
      <div class="product-grid">
        <% products.forEach(p => { 
             const img = p.firstImage || (p.images && p.images[0] && p.images[0].url) || '/images/placeholder.png';
             const unitLabel = (p.unit && (p.unit.shortName || p.unit.name)) || 'ชิ้น';
             const qty = Number.isFinite(p.stockQty) ? p.stockQty : 0;
             const stockClass = qty <= 0 ? 'stock-out' : (qty <= 5 ? 'stock-low' : 'stock-ok');
        %>
          <!-- ผูก slug ไว้ให้ JS ใช้ -->
          <article class="product-card" data-slug="<%= p.slug %>">
            <div class="pc-media">
              <a href="/products/<%= p.slug %>" aria-label="ดูรายละเอียด <%= p.name %>">
                <img class="pc-thumb" src="<%= img %>" alt="<%= p.name %>">
              </a>
              <div class="pc-tab"></div>
            </div>

            <div class="pc-body">
              <h3 class="pc-title">
                <a class="link-strong" href="/products/<%= p.slug %>"><%= p.name %></a>
              </h3>

              <% if (p.model) { %>
                <div class="pc-meta"><%= p.model %></div>
              <% } %>
              <% if (p.system) { %>
                <div class="pc-meta"><%= p.system %></div>
              <% } %>

              <!-- แสดงคงเหลือ -->
              <div class="stock-row" data-stock-row>
                <span class="stock-pill <%= stockClass %>" data-stock-pill>
                  <span class="dot"></span>
                  คงเหลือ: <strong data-stock-qty><%= qty %></strong> <span data-stock-unit><%= unitLabel %></span>
                </span>
                <span class="<%= stockClass %>" data-stock-note>
                  <%= qty <= 0 ? 'สินค้าหมด' : (qty <= 5 ? 'คงเหลือน้อย' : 'พร้อมจำหน่าย') %>
                </span>
              </div>

              <div class="pc-grow"></div>

              <div class="pc-footer">
                <div class="pc-price">
                  <%= (Number(p.price) || 0).toLocaleString('th-TH', { minimumFractionDigits: 2 }) %> บาท
                </div>

                <div class="pc-actions">
                  <a class="btn btn--primary btn--sm" href="/products/<%= p.slug %>">รายละเอียด</a>
                </div>
              </div>
            </div>
          </article>
        <% }) %>
      </div>
    <% } %>
  </main>

  <%- include('partials/footer') %>

  <!-- ===== อัปเดตคงเหลือแบบเรียลไทม์ + สำรอง Polling ===== -->
  <script>
    (function(){
      const cards = Array.from(document.querySelectorAll('.product-card[data-slug]'));
      if (!cards.length) return;

      const slugs = cards.map(c => c.getAttribute('data-slug'));
      const POLL_API  = '/api/products/stock?slugs=' + encodeURIComponent(slugs.join(','));
      const SSE_API   = '/api/products/stock/stream?slugs=' + encodeURIComponent(slugs.join(','));

      function classByQty(q){
        if (q <= 0) return 'stock-out';
        if (q <= 5) return 'stock-low';
        return 'stock-ok';
      }
      function noteByQty(q){
        if (q <= 0) return 'สินค้าหมด';
        if (q <= 5) return 'คงเหลือน้อย';
        return 'พร้อมจำหน่าย';
      }
      function tweenNumber(el, from, to, ms=350){
        if (from === to) { el.textContent = to; return; }
        const start = performance.now();
        function tick(now){
          const t = Math.min(1, (now - start) / ms);
          const val = Math.round(from + (to - from) * t);
          el.textContent = val;
          if (t < 1) requestAnimationFrame(tick);
        }
        requestAnimationFrame(tick);
      }
      function updateOne(slug, nextQty){
        const card = cards.find(c => c.getAttribute('data-slug') === slug);
        if (!card) return;

        const row  = card.querySelector('[data-stock-row]');
        const pill = card.querySelector('[data-stock-pill]');
        const qtyEl= card.querySelector('[data-stock-qty]');
        const note = card.querySelector('[data-stock-note]');

        const current = parseInt(qtyEl.textContent || '0', 10);
        const next = Number(nextQty) || 0;
        if (current === next) return;

        row.classList.add('stock-anim');
        tweenNumber(qtyEl, current, next, 350);
        setTimeout(() => {
          ['stock-ok','stock-low','stock-out'].forEach(c => pill.classList.remove(c));
          pill.classList.add(classByQty(next));
          note.className = classByQty(next);
          note.textContent = noteByQty(next);
          row.classList.remove('stock-anim');
        }, 260);
      }
      function updateBatch(list){
        list.forEach(d => updateOne(String(d.slug), d.stockQty));
      }

      // 1) ใช้ SSE ก่อน
      let sseOk = false;
      try{
        if ('EventSource' in window){
          const es = new EventSource(SSE_API, { withCredentials: false });
          es.onopen = () => { sseOk = true; };
          es.onmessage = (ev) => {
            try{
              const data = JSON.parse(ev.data);
              if (Array.isArray(data)) updateBatch(data);
              else if (data && data.slug != null) updateOne(String(data.slug), data.stockQty);
            }catch(e){}
          };
          es.onerror = () => {
            es.close();
            if (!sseOk) startPolling();
          };
          setTimeout(() => { if (!sseOk) startPolling(); }, 20000);
          return;
        }
      }catch(_e){}

      // 2) สำรองด้วย Polling
      startPolling();

      function startPolling(){
        let timer = null;
        async function fetchStock(){
          try{
            const res = await fetch(POLL_API, { headers:{'Accept':'application/json'}, cache:'no-store' });
            if (!res.ok) return;
            const json = await res.json();
            if (Array.isArray(json)) updateBatch(json);
          }catch(e){}
        }
        fetchStock();
        timer = setInterval(fetchStock, 15000);
        document.addEventListener('visibilitychange', () => { if (!document.hidden) fetchStock(); });
        window.addEventListener('beforeunload', () => timer && clearInterval(timer));
      }
    })();
  </script>
</body>
</html>
